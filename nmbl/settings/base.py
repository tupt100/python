"""
Django settings for nmbl project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import sys

from unipath import Path

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

PROJECT_DIR = Path(__file__).ancestor(2)
PROJECT_APPS = Path(__file__).ancestor(2)

sys.path.insert(0, Path(PROJECT_APPS, 'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'k04ukoltjm6epg^liz4ia!slt@mj(54z^*lq304j&o55%^_=7h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition


SHARED_APPS = (
    'django_tenants',  # mandatory
    # 'tenant_schemas_celery',
    'customers',  # you must list the app where your tenant model resides in
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'widget_tweaks',
    'django_filters',
    'rest_framework_swagger',
    'authentication',
    'projects',
    'notifications',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',
    'corsheaders',  # https://github.com/ottoyiu/django-cors-headers
    'easy_thumbnails',
    'tenant_schemas_celery',  # manage celery in multi-tenant
)

TENANT_APPS = (
    # The following Django contrib apps must be in TENANT_APPS
    # your tenant-specific apps
    'django.contrib.admin',
    'django.contrib.sessions',
    'django.contrib.contenttypes',
    'rest_auth',
    'rest_framework.authtoken',
    'projects',
    'notifications',
    'authentication',
    'channels',
    'easy_thumbnails',
)
INSTALLED_APPS = list(SHARED_APPS) + [
    app for app in TENANT_APPS if app not in SHARED_APPS]

TENANT_MODEL = "customers.Client"  # app.Model
TENANT_DOMAIN_MODEL = "customers.Domain"  # app.Model

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django_tenants.middleware.main.TenantMainMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # custom middleware
    'authentication.current_user.CurrentUserMiddleware'
]

REST_AUTH_SERIALIZERS = {
    'PASSWORD_RESET_SERIALIZER':
        'authentication.serializers.PasswordResetSerializer',
}
DATABASE_ROUTERS = (
   'django_tenants.routers.TenantSyncRouter',
)

ROOT_URLCONF = 'nmbl.urls'
#
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'nmbl.wsgi.application'

ASGI_APPLICATION = "nmbl.routing.application"

# Channels settings
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("localhost", 6379)],
        },
    },
}

# channel_layer = channels.asgi.get_channel_layer()

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'EXCEPTION_HANDLER': 'base.api.drferrorhandler.exception_handler',
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
        # 'rest_framework.permissions.AllowAny',
        # 'rest_framework.permissions.DjangoModelPermissions',
    ),
    'DATETIME_FORMAT': "%Y-%m-%dT%H:%M:%SZ",
    'DEFAULT_PAGINATION_CLASS':
        'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 30,
    'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning',
    'DEFAULT_MODEL_SERIALIZER_CLASS': [
        'rest_framework.serializers.ModelSerializer',
    ],
    # 'DEFAULT_PARSER_CLASSES': [
    #     'rest_framework.parsers.FormParser',
    #     'rest_framework.parsers.MultiPartParser',
    #     'rest_framework.parsers.JSONParser',
    # ]
}

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
)

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

# media files (Pdf, Images)
MEDIA_ROOT = PROJECT_DIR.child('media')

MEDIA_URL = '/media/'

# Static files (CSS, JavaScript, Images, Pdf)
STATIC_ROOT = PROJECT_DIR.child('staticfiles')

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    PROJECT_DIR.child("static"),
]

AUTH_USER_MODEL = 'authentication.User'
AUTH_USERNAME_FIELD = 'email'

ACCOUNT_ADAPTER = 'authentication.models.InvitationsAdapter'

LOGIN_REDIRECT = 'authentication:login'
SIGNUP_REDIRECT = 'authentication:signup'

SITE_ID = 1

CORS_ORIGIN_ALLOW_ALL = True

# Django Suit configuration example
SUIT_CONFIG = {
    # header
    'ADMIN_NAME': 'Proxy App Administration',
    # 'HEADER_DATE_FORMAT': 'l, j. F Y',
    # 'HEADER_TIME_FORMAT': 'H:i',

    # forms
    # 'SHOW_REQUIRED_ASTERISK': True,  # Default True
    # 'CONFIRM_UNSAVED_CHANGES': True, # Default True

    # menu
    'SEARCH_URL': '/admin/authentication/user/',
    'MENU_ICONS': {
        # 'sites': 'icon-leaf',
        # 'authentication': 'icon-lock',
    },
    'MENU_OPEN_FIRST_CHILD': False,  # Default True
    'MENU_EXCLUDE': ('sites',),
    # 'MENU': (
    #     'sites',
    #     {'app': 'auth', 'icon':'icon-lock', 'models': ('user', 'group')},
    #     {'label': 'Settings', 'icon':'icon-cog', 'models': ('auth.user', 'auth.group')},
    #     {'label': 'Support', 'icon':'icon-question-sign', 'url': '/support/'},
    # ),

    # misc
    # 'LIST_PER_PAGE': 15
}

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
DEFAULT_FROM_EMAIL = "no-reply@proxylegalapp.com"
DRF_RECAPTCHA_VERIFY_ENDPOINT = "https://www.google.com/recaptcha/api/siteverify"

