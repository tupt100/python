# Generated by Django 2.2.17 on 2021-12-03 20:09

import django.contrib.postgres.fields.jsonb
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0039_auto_20211104_0414'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('projects', '0066_auto_20211110_1853'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='task',
            options={'verbose_name': 'Task', 'verbose_name_plural': 'Tasks'},
        ),
        migrations.AlterField(
            model_name='attachment',
            name='created_by',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='attachment_created_by',
                to=settings.AUTH_USER_MODEL,
                verbose_name='Created By',
            ),
        ),
        migrations.AlterField(
            model_name='project',
            name='attorney_client_privilege',
            field=models.BooleanField(default=False, verbose_name='Project Privilege Attorney Client'),
        ),
        migrations.AlterField(
            model_name='project',
            name='confidential_privilege',
            field=models.BooleanField(default=False, verbose_name='Project Privilege Confidential'),
        ),
        migrations.AlterField(
            model_name='project',
            name='work_product_privilege',
            field=models.BooleanField(default=False, verbose_name='Project Privilege Work Product'),
        ),
        migrations.AlterField(
            model_name='task',
            name='attorney_client_privilege',
            field=models.BooleanField(default=False, verbose_name='Task Privilege Attorney Client'),
        ),
        migrations.AlterField(
            model_name='task',
            name='confidential_privilege',
            field=models.BooleanField(default=False, verbose_name='Task Privilege Confidential'),
        ),
        migrations.AlterField(
            model_name='task',
            name='work_product_privilege',
            field=models.BooleanField(default=False, verbose_name='Task Privilege Work Product'),
        ),
        migrations.AlterField(
            model_name='workflow',
            name='attorney_client_privilege',
            field=models.BooleanField(default=False, verbose_name='Workflow  Privilege Attorney Client'),
        ),
        migrations.AlterField(
            model_name='workflow',
            name='confidential_privilege',
            field=models.BooleanField(default=False, verbose_name='Workflow  Privilege Confidential'),
        ),
        migrations.AlterField(
            model_name='workflow',
            name='work_product_privilege',
            field=models.BooleanField(default=False, verbose_name='Workflow Privilege Work Product'),
        ),
        migrations.CreateModel(
            name='TaskFixture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified At')),
                ('name', models.CharField(db_index=True, max_length=254, verbose_name='Name')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Due Date')),
                ('old_due_date', models.DateTimeField(blank=True, null=True, verbose_name='Due Date')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_email_notified', models.BooleanField(default=False, verbose_name='Is Email Modified')),
                ('is_assignee_changed', models.BooleanField(default=False, verbose_name='Is Assignee Changed')),
                ('start_date', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Due Date')),
                ('is_private', models.BooleanField(default=False, verbose_name='Is Private')),
                ('completed_percentage', models.IntegerField(blank=True, default=0, null=True)),
                (
                    'importance',
                    models.IntegerField(
                        blank=True,
                        choices=[(0, 'No importance'), (1, 'Low'), (2, 'Med'), (3, 'High')],
                        default=0,
                        null=True,
                        verbose_name='Task Priority',
                    ),
                ),
                (
                    'status',
                    models.IntegerField(
                        choices=[
                            (1, 'New'),
                            (2, 'In-Progress'),
                            (3, 'Completed'),
                            (4, 'Archived'),
                            (5, 'External Request'),
                            (6, 'External Update'),
                            (7, 'Advise'),
                            (8, 'Analyze'),
                            (9, 'Approve'),
                            (10, 'Brief'),
                            (11, 'Closing'),
                            (12, 'Communicate'),
                            (13, 'Coordinate'),
                            (14, 'Deposition'),
                            (15, 'Diligence'),
                            (16, 'Discovery'),
                            (17, 'Document'),
                            (18, 'Draft'),
                            (19, 'Execute'),
                            (20, 'Fact Gathering'),
                            (21, 'File'),
                            (22, 'File Management'),
                            (23, 'Hearing'),
                            (24, 'Investigate'),
                            (25, 'Negotiate'),
                            (26, 'On Hold'),
                            (27, 'Plan'),
                            (28, 'Pleading'),
                            (29, 'Prepare'),
                            (30, 'Research'),
                            (31, 'Review'),
                            (32, 'Revise'),
                            (33, 'Settle'),
                            (34, 'Structure'),
                        ],
                        default=1,
                        verbose_name='Status',
                    ),
                ),
                (
                    'pre_save_data',
                    django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Backend flag', null=True),
                ),
                (
                    'attorney_client_privilege',
                    models.BooleanField(default=False, verbose_name='Task Privilege Attorney Client'),
                ),
                (
                    'work_product_privilege',
                    models.BooleanField(default=False, verbose_name='Task Privilege Work Product'),
                ),
                (
                    'confidential_privilege',
                    models.BooleanField(default=False, verbose_name='Task Privilege Confidential'),
                ),
                ('is_delete', models.BooleanField(default=False, verbose_name='Task Delete')),
                (
                    'custom_fields_value',
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, default=dict, null=True, verbose_name='Custom fields value'
                    ),
                ),
                (
                    'after_task',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='taskfixture_after',
                        to='projects.TaskFixture',
                        verbose_name='After Task',
                    ),
                ),
                (
                    'assigned_to',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='taskfixture_assigned_to_user',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Assigned To',
                    ),
                ),
                (
                    'assigned_to_group',
                    models.ManyToManyField(
                        blank=True,
                        related_name='taskfixture_assigned_to_workgroup',
                        to='projects.WorkGroup',
                        verbose_name='WorkGroup Task',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='taskfixture_created_by',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Created By',
                    ),
                ),
                (
                    'last_modified_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='projects_taskfixture_last_modified_by',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Modified By',
                    ),
                ),
                (
                    'observers',
                    models.ManyToManyField(
                        blank=True,
                        related_name='taskfixture_observers',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Observers',
                    ),
                ),
                (
                    'organization',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='taskfixture_organization',
                        to='authentication.Organization',
                        verbose_name='Company',
                    ),
                ),
                (
                    'prior_task',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='taskfixture_prior',
                        to='projects.TaskFixture',
                        verbose_name='Prior Task',
                    ),
                ),
                (
                    'requester',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='taskfixture_request',
                        to='projects.ServiceDesk',
                        verbose_name='Request To Task',
                    ),
                ),
                (
                    'servicedesk_request',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='servicedesk_request_taskfixture',
                        to='projects.ServiceDeskRequest',
                        verbose_name='ServiceDeskRequest To Task',
                    ),
                ),
                (
                    'task_tags',
                    models.ManyToManyField(
                        blank=True, related_name='taskfixture_tags', to='projects.Tag', verbose_name='Task Tag'
                    ),
                ),
                (
                    'task_template',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='projects.TaskTemplate',
                        verbose_name='Task template',
                    ),
                ),
                (
                    'workflow_template',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='task_fixtures',
                        to='projects.WorkflowTemplate',
                        verbose_name='Workflow template',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Task Fixture',
                'verbose_name_plural': 'Task Fixtures',
            },
        ),
    ]
